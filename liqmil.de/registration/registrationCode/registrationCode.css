body {
    margin: 0;
    width: 100vw;
    height:100vh;
}


main {
    width: 100%;
    height: 100%;
}
.mainBlock {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    width: 100%;
    height: 100%;
}
.block {
    width: 100%;
    height: 40%;
    display: flex;
    flex-direction: column;
    align-items: center;
    

}



#form {
    
    display: flex;
    flex-direction: column;
    align-items: center;
}
#input {
    width: auto;
    margin: 1em;
    
}

.userName {
    background-color: rgba(201, 154, 245, 0.562);
    text-align: center;
    width: 250px;
    height: 35px;
    border-radius: 4em;
    border: 0.1em solid rgb(111, 2, 138);
}
.userName::placeholder {
    color: rgb(0, 0, 0);
    font-weight: 500;
    font-size: 15px;
    text-shadow: 1px 1px 0px rgb(255, 255, 255) ;

    
}

.email {
    background-color: rgba(201, 154, 245, 0.562);
    text-align: center;
    width: 250px;
    height: 35px;
    border-radius: 4em;
    border: 0.1em solid rgb(111, 2, 138);
}
.code {
    background-color: rgba(201, 154, 245, 0.562);
    text-align: center;
    width: 250px;
    height: 35px;
    border-radius: 4em;
    border: 0.1em solid rgb(111, 2, 138);

}

.email::placeholder {
    color: rgb(0, 0, 0);
    font-weight: 500;
    font-size: 15px;
    text-shadow: 1px 1px 0px rgb(255, 255, 255) ;
}
.blockPassword {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.password {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgb(235, 214, 255);
    text-align: center;
    width: 200px;
    height: 30px;
    border-radius: 4em;
    border: 0.1em solid rgb(98, 20, 117);
}

.password::placeholder {
    color: rgb(0, 0, 0);
    font-weight: 500;
    font-size: 15px;
    text-shadow: 1px 1px 0px rgb(255, 255, 255) ;
   
}

.confirmPassword{
    background-color: rgba(235, 214, 255);
    text-align: center;
    width: 200px;
    height: 30px;
    border-radius: 4em;
    border: 0.1em solid rgb(111, 2, 138);
}
.confirmPassword::placeholder {
    color: rgb(0, 0, 0);
    font-weight: 500;
    font-size: 15px;
    text-shadow: 1px 1px 0px rgb(255, 255, 255) ;
}
.blockSubmit {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}
.submit {
    margin-top: 5em;
    width: 100px;
    height: 25px;
    background-color: rgb(223, 192, 253);
    border-radius: 4em;
    border: 0.1em solid rgb(161, 89, 179);
}


#inputPassword {
    margin: 1em;
}


.error {
    border: 2px solid red;
}

.success {
    border: 2px solid green;
}

.popup {
    height: 150px;
    width: 150px;
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 20px;
    border-radius: 4px;
    color: #0b0707;
    z-index: 9999;
    
}

.popup.success {
    background-color: #4caf50; /* зелений */
  }
  .popup.error {
    background-color: #f44336;
  }


.formshow {
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    color: #01c041;
    text-align: center;
    width: 200px;
    height: 30px;
    font-weight: 500;
    font-size: 15px;
    text-shadow: 1px 1px 0px rgb(255, 255, 255) ;
    border-radius: 4em;
    border: 0.1em solid rgb(214, 185, 221);
    
   
}
.blockFormSchow{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 40px;
}

#cod {
    font: 100;
    font-family: initial;
    font-size: 17px;
}
/*  document.getElementById("registrForm").addEventListener("submit", async (event) => {
    console.log("Форма відправлена")
    event.preventDefault();


    const formData = {
        username: event.target.username.value,
        email: event.target.email.value,
        password: event.target.password.value,
    };

    try {
        const response = await fetch("http://localhost:4000/api/register", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(formData)
        });

        if (!response.ok) {
            throw new Error(`Сервер повернув статус: ${response.status}`);
        }

        const data = await response.json();
        console.log("Відповідь сервера:", data);
    } catch (error) {
        console.error("Помилка під час відправки запиту:", error);
    }
});  